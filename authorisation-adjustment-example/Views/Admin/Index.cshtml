@using adyen_dotnet_authorisation_adjustment_example.Models;
@{
    ViewData["Title"] = "Adyen Admin Panel";
    List<PaymentModel> payments = ViewBag.Payments;
}

<div class="main-container">
    <div class="info">
        <h1>ADMIN PANEL</h1>
        <div class="admin-panel-container">
            <p>The <b>admin panel</b> shows all payments for hotel bookings. In order to perform actions on the payments, follow the readme to ensure that you have set up your webhooks correctly to receive payment updates asynchronously. </p>

            @if (payments != null && payments.Any())
            {
                <p>
                    <b>Actions:</b><br />
                    
                    <b> 1. 
                        <a href="https://docs.adyen.com/online-payments/classic-integrations/modify-payments/adjust-authorisation">Adjust:</a>
                    </b> Increases/decreases the payment amount of a pre-authorisation. <br />
                    
                    <b> 2. 
                        <a href="https://docs.adyen.com/online-payments/classic-integrations/modify-payments/adjust-authorisation/#extend-authorisation">Extend:</a>
                    </b> Extends expiry date, see <a href="https://docs.adyen.com/online-payments/classic-integrations/modify-payments/adjust-authorisation#validity">validity</a>. <br />

                    <b> 3. 
                        <a href="https://docs.adyen.com/online-payments/adjust-authorisation/#capture-authorisation">Capture:</a>
                    </b> Finalises the payment, e.g. the reserved funds are transferred from the shopper to your account. <br />
                    
                    <b> 4. 
                        <a href="https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund/">Reversal:</a>
                    </b> Cancels or refunds the payment.
                </p>
            }
        </div>
    </div>
    <br/>
    <div class="admin-panel-payment-container"> 
    @{
        if (payments == null || !payments.Any())
        {
            <p>
                <b>
                    No payments are stored. You can make a card payment in the <a href="/">Booking View</a>.
                </b>
            </p>
        }
        else
        {
            @foreach(var payment in payments)
            {
                double amount = (payment.Amount ?? 0.0) / 100L;
                <ul class="adminList">   
                    <li><b>Merchant Reference: &nbsp;</b> <a href="admin/details/@payment.MerchantReference">@payment.MerchantReference</a></li>
                    <li><b>Pre-authorisation PspReference: &nbsp;</b> @payment.PspReference</li>
                    
                    
                    @if (payment.Amount != null && !string.IsNullOrWhiteSpace(payment.Currency))
                    {
                        <li>
                            <!-- Convert amount from minor units EUR `1234` to EUR`12.34`-->
                            <b>Preauthorised Amount: &nbsp;</b> @payment.Currency @amount
                        </li>
                    }
                    
                    <li>
                        <b>Payment Method Brand: &nbsp;</b> @payment.PaymentMethodBrand
                    </li>
                        
                    <li><b>Booking Date: &nbsp;</b> @payment.BookingDate.ToLocalTime()</li> 
                    
                    @{
                        var expiryDaysLeft = payment.ExpiryDate.Subtract(payment.BookingDate).Days;
                    }
                    <li><b>Expiry Date: &nbsp;</b> @payment.ExpiryDate.ToLocalTime() (@expiryDaysLeft days until&nbsp;<a href="https://docs.adyen.com/online-payments/classic-integrations/modify-payments/adjust-authorisation#validity">expiry</a>)</li> 
                   
                    <li><b>Last Updated: &nbsp;</b> @payment.LastUpdated.ToLocalTime()</li> 

                    
                    <li>
                        @{
                            bool showAdjustButton = payment.GetPaymentStatus() is PaymentStatus.Authorised;
                        
                            if (showAdjustButton)
                            {
                                <form name="updatePaymentAmountForm" method="post">
                                    <b>Adjust amount:</b> <input type="text" name="amount" value="@amount" class="adjustAmountText">
                                        <input type="hidden" name="reference" value="@payment.MerchantReference" />
                                    <button type="submit" class="adjustSubmitButton">Adjust</button>
                                </form>
                            }
                            else
                            {
                                <form name="updatePaymentAmountForm" method="post">
                                    <b>Adjust amount:</b> <input type="text" name="amount" value="@amount" class="adjustAmountText" disabled>
                                        <input type="hidden" name="reference" value="@payment.MerchantReference" />
                                    <button type="submit" class="adjustSubmitButton" disabled>Adjust</button>
                                </form>
                            }
                        }
                    </li>
                            
                    <li class="display-flex">
                        @{
                            if (showAdjustButton)
                            {
                                <form name="extendPaymentForm" method="post">
                                    <input type="hidden" name="amount" value="@amount">
                                    <input type="hidden" name="reference" value="@payment.MerchantReference"/>
                                    <button type="submit" class="submitButton">Extend</button>
                                </form>
                            }
                            else
                            {                            
                                <form name="extendPaymentForm" method="post">
                                    <input type="hidden" name="amount" value="@amount">
                                    <input type="hidden" name="reference" value="@payment.MerchantReference"/>
                                    <button type="submit" class="submitButton" disabled>Extend</button>
                                </form>
                            }
                        }
                        @{
                            bool showCaptureButton = payment.GetPaymentStatus() is PaymentStatus.Authorised;
                        
                            if (showCaptureButton)
                            {
                                <form name="capturePaymentForm" method="post">
                                    <input type="hidden" name="reference" value="@payment.MerchantReference"/>
                                    <button type="submit" class="submitButton">Capture</button>
                                </form>
                            }
                            else
                            {

                                <form name="capturePaymentForm" method="post">
                                    <input type="hidden" name="reference" value="@payment.MerchantReference"/>
                                    <button type="submit" class="submitButton" disabled>Capture</button>
                                </form>
                            }
                        }

                        @{
                            bool showReversalButton = payment.GetPaymentStatus() is PaymentStatus.Authorised or PaymentStatus.Captured;

                            if (showReversalButton)
                            {
                                <form name="reversalPaymentForm" method="post">
                                    <input type="hidden" name="reference" value="@payment.MerchantReference"/>
                                    <button type="submit" class="submitButton">Reversal</button>
                                </form>
                            }
                            else
                            {
                                <form name="reversalPaymentForm" method="post">
                                    <input type="hidden" name="reference" value="@payment.MerchantReference"/>
                                    <button type="submit" class="submitButton" disabled>Reversal</button>
                                </form>
                            }
                        }
                    </li>
                </ul>
            }
        }
    }
    </div>
</div>

<!-- Binds all submit form buttons for `/update-payment-amount` endpoint -->
<script src="~/js/adminpanel-updatePaymentAmount-bindings.js" asp-append-version="true"></script>

<!-- Binds all submit form buttons for `/capture-payment` endpoint -->
<script src="~/js/adminpanel-capturePayment-bindings.js" asp-append-version="true"></script>

<!-- Binds all submit form buttons for `/reversal-payment` endpoint -->
<script src="~/js/adminpanel-reversalPayment-bindings.js" asp-append-version="true"></script>