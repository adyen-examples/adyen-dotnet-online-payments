@using Adyen.Model.Recurring;
@using adyen_dotnet_authorisation_adjustment_example.Models;
@{
    ViewData["Title"] = "Adyen Hotel Admin View";
    List<HotelPaymentModel> hotelPayments = ViewBag.HotelPayments;
}

<div class="main-container">
    <div class="info">
        <h1>ADMIN PANEL</h1>
        <div class="admin-panel-container">
            <p>The <b>admin panel</b> shows all payments for hotel bookings. In order to perform actions on the payments, follow the readme to ensure that you have setup your webhooks correctly to receive payment updates asynchronously. </p>
            <p>Select a hotel payment to adjust the payment amount or to extend its validity (expiration date). To learn more, check out the documentation about <a href="https://docs.adyen.com/online-payments/classic-integrations/modify-payments/adjust-authorisation"> authorisation adjustments.</a></p>
        </div>
    </div>
    <br/>
    <div class="admin-panel-payment-container"> 
    @{
        if (hotelPayments == null || !hotelPayments.Any())
        {
            <p>
                <b>
                    No payments are stored. You can make a card payment in the <a href="/">Booking View</a>.
                </b>
            </p>
        }
        else
        {
            @foreach(var payment in hotelPayments)
            {
                double amount = (payment.Amount ?? 0.0) / 100L;
                <div>
                    <ul class="adminList" value="@payment.PspReference">   
                        <li><b>Result Code:</b> @payment.ResultCode </li>
                        <li><b>PspReference:</b> @payment.PspReference</li>
                        <li><b>Reference:</b> @payment.Reference</li>
                    
                        @if (payment.IsRefusalReasonShown())
                        {
                            <li>
                                <b>Refusal Reason:</b> @payment.RefusalReason
                            </li>
                        }
                        
                        @if (payment.IsAmountShown())
                        {
                            <li>
                                <!-- Show amount from minor units EUR `1234` as: EUR`12.34`-->
                                <b>Payment Amount:</b> @payment.Currency @amount
                            </li>
                            
                            @if (payment.IsPaymentMethodShown())
                            {
                                <li>
                                    <b>Payment Method Brand/Type:</b> @payment.PaymentMethodBrand / @payment.PaymentMethodType
                                </li>
                            }
                        }
                        
                        <li><b>DateTime:</b> @payment.DateTime</li> 

                        <li>
                            @if (payment.IsAuthorised() || payment.IsAuthorisedAdjusted())
                            {
                                <form name="updatePaymentAmountForm" method="post">
                                    <b>Adjust amount:</b> <input type="text" name="amount" value="@amount" class="adjustAmountText">
                                    <input type="hidden" name="pspReference" value="@payment.PspReference"/>
                                    <button type="submit" class="adjustSubmitButton">Adjust</button>
                                </form>
                            }
                        </li>
                            
                        <li class="display-flex">
                            @if (payment.IsAuthorised() || payment.IsAuthorisedAdjusted())
                            {
                                <form name="extendPaymentForm" method="post">
                                    <input type="hidden" name="amount" value="@amount">
                                    <input type="hidden" name="pspReference" value="@payment.PspReference"/>
                                    <button type="submit" class="submitButton">Extend</button>
                                </form>

                                <form name="capturePaymentForm" method="post">
                                    <input type="hidden" name="pspReference" value="@payment.PspReference"/>
                                    <button type="submit" class="submitButton">Capture</button>
                                </form>
                            }
                            
                            <form name="reversalPaymentForm" method="post">
                                <input type="hidden" name="pspReference" value="@payment.PspReference"/>
                                <button type="submit" class="submitButton">Reversal</button>
                            </form>
                        </li>
                    </ul>
                </div>
            }
        }
    }
    </div>
</div>

<!-- Binds all submit form buttons for `/update-payment-amount` endpoint -->
<script src="~/js/adminpanel-updatePaymentAmount-bindings.js" asp-append-version="true"></script>

<!-- Binds all submit form buttons for `/capture-payment` endpoint -->
<script src="~/js/adminpanel-capturePayment-bindings.js" asp-append-version="true"></script>

<!-- Binds all submit form buttons for `/reversal-payment` endpoint -->
<script src="~/js/adminpanel-reversalPayment-bindings.js" asp-append-version="true"></script>